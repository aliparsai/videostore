/*
 * This file was automatically generated by EvoSuite
 * Fri Sep 30 17:48:48 GMT 2016
 */

package nul.study.videostore.EvoSuiteTests;

import org.junit.Test;
import static org.junit.Assert.*;
import nul.study.videostore.NewReleaseMovie;

public class NewReleaseMovie_ESTest {

  //Test case number: 0
  /*
   * 23 covered goals:
   * Goal 1. nul.study.videostore.NewReleaseMovie.determineAmount(I)D: root-Branch
   * Goal 2. nul.study.videostore.NewReleaseMovie.<init>(Ljava/lang/String;)V: root-Branch
   * Goal 3. Branch nul.study.videostore.NewReleaseMovie.determineAmount(I)D: root-Branch in context: nul.study.videostore.NewReleaseMovie:determineAmount(I)D
   * Goal 4. Branch nul.study.videostore.NewReleaseMovie.<init>(Ljava/lang/String;)V: root-Branch in context: nul.study.videostore.NewReleaseMovie:<init>(Ljava/lang/String;)V
   * Goal 5. [Output]: nul.study.videostore.NewReleaseMovie.determineAmount(I)D:Zero
   * Goal 6. nul.study.videostore.NewReleaseMovie.<init>(Ljava/lang/String;)V: Line 6
   * Goal 7. nul.study.videostore.NewReleaseMovie.determineAmount(I)D: Line 10
   * Goal 8. [METHOD] nul.study.videostore.NewReleaseMovie.<init>(Ljava/lang/String;)V
   * Goal 9. [METHOD] nul.study.videostore.NewReleaseMovie.determineAmount(I)D
   * Goal 10. [METHODNOEX] nul.study.videostore.NewReleaseMovie.<init>(Ljava/lang/String;)V
   * Goal 11. [METHODNOEX] nul.study.videostore.NewReleaseMovie.determineAmount(I)D
   * Goal 12. Weak Mutation 0: nul.study.videostore.NewReleaseMovie.determineAmount(I)D:10 - ReplaceVariable daysRented -> NEW_RELEASE
   * Goal 13. Weak Mutation 2: nul.study.videostore.NewReleaseMovie.determineAmount(I)D:10 - ReplaceVariable daysRented -> CHILDRENS
   * Goal 14. Weak Mutation 3: nul.study.videostore.NewReleaseMovie.determineAmount(I)D:10 - InsertUnaryOp Negation of daysRented
   * Goal 15. Weak Mutation 4: nul.study.videostore.NewReleaseMovie.determineAmount(I)D:10 - InsertUnaryOp IINC 1 daysRented
   * Goal 16. Weak Mutation 5: nul.study.videostore.NewReleaseMovie.determineAmount(I)D:10 - InsertUnaryOp IINC -1 daysRented
   * Goal 17. Weak Mutation 6: nul.study.videostore.NewReleaseMovie.determineAmount(I)D:10 - ReplaceConstant - 3.0 -> 0.0
   * Goal 18. Weak Mutation 7: nul.study.videostore.NewReleaseMovie.determineAmount(I)D:10 - ReplaceConstant - 3.0 -> 1.0
   * Goal 19. Weak Mutation 8: nul.study.videostore.NewReleaseMovie.determineAmount(I)D:10 - ReplaceConstant - 3.0 -> -1.0
   * Goal 20. Weak Mutation 9: nul.study.videostore.NewReleaseMovie.determineAmount(I)D:10 - ReplaceConstant - 3.0 -> 2.0
   * Goal 21. Weak Mutation 10: nul.study.videostore.NewReleaseMovie.determineAmount(I)D:10 - ReplaceConstant - 3.0 -> 4.0
   * Goal 22. Weak Mutation 11: nul.study.videostore.NewReleaseMovie.determineAmount(I)D:10 - ReplaceArithmeticOperator * -> +
   * Goal 23. Weak Mutation 13: nul.study.videostore.NewReleaseMovie.determineAmount(I)D:10 - ReplaceArithmeticOperator * -> -
   */

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      NewReleaseMovie newReleaseMovie0 = new NewReleaseMovie("");
      double double0 = newReleaseMovie0.determineAmount(0);
      assertEquals(0.0, double0, 0.01);
  }

  //Test case number: 1
  /*
   * 25 covered goals:
   * Goal 1. nul.study.videostore.NewReleaseMovie.determineAmount(I)D: root-Branch
   * Goal 2. nul.study.videostore.NewReleaseMovie.<init>(Ljava/lang/String;)V: root-Branch
   * Goal 3. Branch nul.study.videostore.NewReleaseMovie.determineAmount(I)D: root-Branch in context: nul.study.videostore.NewReleaseMovie:determineAmount(I)D
   * Goal 4. Branch nul.study.videostore.NewReleaseMovie.<init>(Ljava/lang/String;)V: root-Branch in context: nul.study.videostore.NewReleaseMovie:<init>(Ljava/lang/String;)V
   * Goal 5. [Output]: nul.study.videostore.NewReleaseMovie.determineAmount(I)D:Positive
   * Goal 6. nul.study.videostore.NewReleaseMovie.<init>(Ljava/lang/String;)V: Line 6
   * Goal 7. nul.study.videostore.NewReleaseMovie.determineAmount(I)D: Line 10
   * Goal 8. [METHOD] nul.study.videostore.NewReleaseMovie.<init>(Ljava/lang/String;)V
   * Goal 9. [METHOD] nul.study.videostore.NewReleaseMovie.determineAmount(I)D
   * Goal 10. [METHODNOEX] nul.study.videostore.NewReleaseMovie.<init>(Ljava/lang/String;)V
   * Goal 11. [METHODNOEX] nul.study.videostore.NewReleaseMovie.determineAmount(I)D
   * Goal 12. Weak Mutation 0: nul.study.videostore.NewReleaseMovie.determineAmount(I)D:10 - ReplaceVariable daysRented -> NEW_RELEASE
   * Goal 13. Weak Mutation 1: nul.study.videostore.NewReleaseMovie.determineAmount(I)D:10 - ReplaceVariable daysRented -> REGULAR
   * Goal 14. Weak Mutation 3: nul.study.videostore.NewReleaseMovie.determineAmount(I)D:10 - InsertUnaryOp Negation of daysRented
   * Goal 15. Weak Mutation 4: nul.study.videostore.NewReleaseMovie.determineAmount(I)D:10 - InsertUnaryOp IINC 1 daysRented
   * Goal 16. Weak Mutation 5: nul.study.videostore.NewReleaseMovie.determineAmount(I)D:10 - InsertUnaryOp IINC -1 daysRented
   * Goal 17. Weak Mutation 6: nul.study.videostore.NewReleaseMovie.determineAmount(I)D:10 - ReplaceConstant - 3.0 -> 0.0
   * Goal 18. Weak Mutation 7: nul.study.videostore.NewReleaseMovie.determineAmount(I)D:10 - ReplaceConstant - 3.0 -> 1.0
   * Goal 19. Weak Mutation 8: nul.study.videostore.NewReleaseMovie.determineAmount(I)D:10 - ReplaceConstant - 3.0 -> -1.0
   * Goal 20. Weak Mutation 9: nul.study.videostore.NewReleaseMovie.determineAmount(I)D:10 - ReplaceConstant - 3.0 -> 2.0
   * Goal 21. Weak Mutation 10: nul.study.videostore.NewReleaseMovie.determineAmount(I)D:10 - ReplaceConstant - 3.0 -> 4.0
   * Goal 22. Weak Mutation 11: nul.study.videostore.NewReleaseMovie.determineAmount(I)D:10 - ReplaceArithmeticOperator * -> +
   * Goal 23. Weak Mutation 12: nul.study.videostore.NewReleaseMovie.determineAmount(I)D:10 - ReplaceArithmeticOperator * -> %
   * Goal 24. Weak Mutation 13: nul.study.videostore.NewReleaseMovie.determineAmount(I)D:10 - ReplaceArithmeticOperator * -> -
   * Goal 25. Weak Mutation 14: nul.study.videostore.NewReleaseMovie.determineAmount(I)D:10 - ReplaceArithmeticOperator * -> /
   */

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      NewReleaseMovie newReleaseMovie0 = new NewReleaseMovie("");
      double double0 = newReleaseMovie0.determineAmount(2);
      assertEquals(6.0, double0, 0.01);
  }

  //Test case number: 2
  /*
   * 23 covered goals:
   * Goal 1. nul.study.videostore.NewReleaseMovie.<init>(Ljava/lang/String;)V: root-Branch
   * Goal 2. nul.study.videostore.NewReleaseMovie.determineFrequentRenterPoints(I)I: I4 Branch 1 IF_ICMPLE L15 - false
   * Goal 3. Branch nul.study.videostore.NewReleaseMovie.<init>(Ljava/lang/String;)V: root-Branch in context: nul.study.videostore.NewReleaseMovie:<init>(Ljava/lang/String;)V
   * Goal 4. Branch nul.study.videostore.NewReleaseMovie.determineFrequentRenterPoints(I)I: I4 Branch 1 IF_ICMPLE L15 - false in context: nul.study.videostore.NewReleaseMovie:determineFrequentRenterPoints(I)I
   * Goal 5. [Output]: nul.study.videostore.NewReleaseMovie.determineFrequentRenterPoints(I)I:Positive
   * Goal 6. nul.study.videostore.NewReleaseMovie.<init>(Ljava/lang/String;)V: Line 6
   * Goal 7. nul.study.videostore.NewReleaseMovie.determineFrequentRenterPoints(I)I: Line 15
   * Goal 8. [METHOD] nul.study.videostore.NewReleaseMovie.<init>(Ljava/lang/String;)V
   * Goal 9. [METHOD] nul.study.videostore.NewReleaseMovie.determineFrequentRenterPoints(I)I
   * Goal 10. [METHODNOEX] nul.study.videostore.NewReleaseMovie.<init>(Ljava/lang/String;)V
   * Goal 11. [METHODNOEX] nul.study.videostore.NewReleaseMovie.determineFrequentRenterPoints(I)I
   * Goal 12. Weak Mutation 15: nul.study.videostore.NewReleaseMovie.determineFrequentRenterPoints(I)I:15 - ReplaceVariable daysRented -> NEW_RELEASE
   * Goal 13. Weak Mutation 16: nul.study.videostore.NewReleaseMovie.determineFrequentRenterPoints(I)I:15 - ReplaceVariable daysRented -> REGULAR
   * Goal 14. Weak Mutation 17: nul.study.videostore.NewReleaseMovie.determineFrequentRenterPoints(I)I:15 - ReplaceVariable daysRented -> CHILDRENS
   * Goal 15. Weak Mutation 18: nul.study.videostore.NewReleaseMovie.determineFrequentRenterPoints(I)I:15 - InsertUnaryOp Negation of daysRented
   * Goal 16. Weak Mutation 19: nul.study.videostore.NewReleaseMovie.determineFrequentRenterPoints(I)I:15 - InsertUnaryOp IINC 1 daysRented
   * Goal 17. Weak Mutation 20: nul.study.videostore.NewReleaseMovie.determineFrequentRenterPoints(I)I:15 - InsertUnaryOp IINC -1 daysRented
   * Goal 18. Weak Mutation 21: nul.study.videostore.NewReleaseMovie.determineFrequentRenterPoints(I)I:15 - ReplaceConstant - 1 -> 0
   * Goal 19. Weak Mutation 22: nul.study.videostore.NewReleaseMovie.determineFrequentRenterPoints(I)I:15 - ReplaceComparisonOperator <= -> >
   * Goal 20. Weak Mutation 23: nul.study.videostore.NewReleaseMovie.determineFrequentRenterPoints(I)I:15 - ReplaceConstant - 2 -> 0
   * Goal 21. Weak Mutation 24: nul.study.videostore.NewReleaseMovie.determineFrequentRenterPoints(I)I:15 - ReplaceConstant - 2 -> 1
   * Goal 22. Weak Mutation 25: nul.study.videostore.NewReleaseMovie.determineFrequentRenterPoints(I)I:15 - ReplaceConstant - 2 -> -1
   * Goal 23. Weak Mutation 26: nul.study.videostore.NewReleaseMovie.determineFrequentRenterPoints(I)I:15 - ReplaceConstant - 2 -> 3
   */

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      NewReleaseMovie newReleaseMovie0 = new NewReleaseMovie("");
      int int0 = newReleaseMovie0.determineFrequentRenterPoints(1502);
      assertEquals(2, int0);
  }

  //Test case number: 3
  /*
   * 19 covered goals:
   * Goal 1. nul.study.videostore.NewReleaseMovie.<init>(Ljava/lang/String;)V: root-Branch
   * Goal 2. nul.study.videostore.NewReleaseMovie.determineFrequentRenterPoints(I)I: I4 Branch 1 IF_ICMPLE L15 - true
   * Goal 3. Branch nul.study.videostore.NewReleaseMovie.<init>(Ljava/lang/String;)V: root-Branch in context: nul.study.videostore.NewReleaseMovie:<init>(Ljava/lang/String;)V
   * Goal 4. Branch nul.study.videostore.NewReleaseMovie.determineFrequentRenterPoints(I)I: I4 Branch 1 IF_ICMPLE L15 - true in context: nul.study.videostore.NewReleaseMovie:determineFrequentRenterPoints(I)I
   * Goal 5. [Output]: nul.study.videostore.NewReleaseMovie.determineFrequentRenterPoints(I)I:Positive
   * Goal 6. nul.study.videostore.NewReleaseMovie.<init>(Ljava/lang/String;)V: Line 6
   * Goal 7. nul.study.videostore.NewReleaseMovie.determineFrequentRenterPoints(I)I: Line 15
   * Goal 8. [METHOD] nul.study.videostore.NewReleaseMovie.<init>(Ljava/lang/String;)V
   * Goal 9. [METHOD] nul.study.videostore.NewReleaseMovie.determineFrequentRenterPoints(I)I
   * Goal 10. [METHODNOEX] nul.study.videostore.NewReleaseMovie.<init>(Ljava/lang/String;)V
   * Goal 11. [METHODNOEX] nul.study.videostore.NewReleaseMovie.determineFrequentRenterPoints(I)I
   * Goal 12. Weak Mutation 15: nul.study.videostore.NewReleaseMovie.determineFrequentRenterPoints(I)I:15 - ReplaceVariable daysRented -> NEW_RELEASE
   * Goal 13. Weak Mutation 17: nul.study.videostore.NewReleaseMovie.determineFrequentRenterPoints(I)I:15 - ReplaceVariable daysRented -> CHILDRENS
   * Goal 14. Weak Mutation 18: nul.study.videostore.NewReleaseMovie.determineFrequentRenterPoints(I)I:15 - InsertUnaryOp Negation of daysRented
   * Goal 15. Weak Mutation 19: nul.study.videostore.NewReleaseMovie.determineFrequentRenterPoints(I)I:15 - InsertUnaryOp IINC 1 daysRented
   * Goal 16. Weak Mutation 20: nul.study.videostore.NewReleaseMovie.determineFrequentRenterPoints(I)I:15 - InsertUnaryOp IINC -1 daysRented
   * Goal 17. Weak Mutation 21: nul.study.videostore.NewReleaseMovie.determineFrequentRenterPoints(I)I:15 - ReplaceConstant - 1 -> 0
   * Goal 18. Weak Mutation 22: nul.study.videostore.NewReleaseMovie.determineFrequentRenterPoints(I)I:15 - ReplaceComparisonOperator <= -> >
   * Goal 19. Weak Mutation 27: nul.study.videostore.NewReleaseMovie.determineFrequentRenterPoints(I)I:15 - ReplaceConstant - 1 -> 0
   */

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      NewReleaseMovie newReleaseMovie0 = new NewReleaseMovie("");
      int int0 = newReleaseMovie0.determineFrequentRenterPoints(0);
      assertEquals(1, int0);
  }

  //Test case number: 4
  /*
   * 26 covered goals:
   * Goal 1. nul.study.videostore.NewReleaseMovie.determineAmount(I)D: root-Branch
   * Goal 2. nul.study.videostore.NewReleaseMovie.<init>(Ljava/lang/String;)V: root-Branch
   * Goal 3. Branch nul.study.videostore.NewReleaseMovie.determineAmount(I)D: root-Branch in context: nul.study.videostore.NewReleaseMovie:determineAmount(I)D
   * Goal 4. Branch nul.study.videostore.NewReleaseMovie.<init>(Ljava/lang/String;)V: root-Branch in context: nul.study.videostore.NewReleaseMovie:<init>(Ljava/lang/String;)V
   * Goal 5. [Output]: nul.study.videostore.NewReleaseMovie.determineAmount(I)D:Negative
   * Goal 6. nul.study.videostore.NewReleaseMovie.<init>(Ljava/lang/String;)V: Line 6
   * Goal 7. nul.study.videostore.NewReleaseMovie.determineAmount(I)D: Line 10
   * Goal 8. [METHOD] nul.study.videostore.NewReleaseMovie.<init>(Ljava/lang/String;)V
   * Goal 9. [METHOD] nul.study.videostore.NewReleaseMovie.determineAmount(I)D
   * Goal 10. [METHODNOEX] nul.study.videostore.NewReleaseMovie.<init>(Ljava/lang/String;)V
   * Goal 11. [METHODNOEX] nul.study.videostore.NewReleaseMovie.determineAmount(I)D
   * Goal 12. Weak Mutation 0: nul.study.videostore.NewReleaseMovie.determineAmount(I)D:10 - ReplaceVariable daysRented -> NEW_RELEASE
   * Goal 13. Weak Mutation 1: nul.study.videostore.NewReleaseMovie.determineAmount(I)D:10 - ReplaceVariable daysRented -> REGULAR
   * Goal 14. Weak Mutation 2: nul.study.videostore.NewReleaseMovie.determineAmount(I)D:10 - ReplaceVariable daysRented -> CHILDRENS
   * Goal 15. Weak Mutation 3: nul.study.videostore.NewReleaseMovie.determineAmount(I)D:10 - InsertUnaryOp Negation of daysRented
   * Goal 16. Weak Mutation 4: nul.study.videostore.NewReleaseMovie.determineAmount(I)D:10 - InsertUnaryOp IINC 1 daysRented
   * Goal 17. Weak Mutation 5: nul.study.videostore.NewReleaseMovie.determineAmount(I)D:10 - InsertUnaryOp IINC -1 daysRented
   * Goal 18. Weak Mutation 6: nul.study.videostore.NewReleaseMovie.determineAmount(I)D:10 - ReplaceConstant - 3.0 -> 0.0
   * Goal 19. Weak Mutation 7: nul.study.videostore.NewReleaseMovie.determineAmount(I)D:10 - ReplaceConstant - 3.0 -> 1.0
   * Goal 20. Weak Mutation 8: nul.study.videostore.NewReleaseMovie.determineAmount(I)D:10 - ReplaceConstant - 3.0 -> -1.0
   * Goal 21. Weak Mutation 9: nul.study.videostore.NewReleaseMovie.determineAmount(I)D:10 - ReplaceConstant - 3.0 -> 2.0
   * Goal 22. Weak Mutation 10: nul.study.videostore.NewReleaseMovie.determineAmount(I)D:10 - ReplaceConstant - 3.0 -> 4.0
   * Goal 23. Weak Mutation 11: nul.study.videostore.NewReleaseMovie.determineAmount(I)D:10 - ReplaceArithmeticOperator * -> +
   * Goal 24. Weak Mutation 12: nul.study.videostore.NewReleaseMovie.determineAmount(I)D:10 - ReplaceArithmeticOperator * -> %
   * Goal 25. Weak Mutation 13: nul.study.videostore.NewReleaseMovie.determineAmount(I)D:10 - ReplaceArithmeticOperator * -> -
   * Goal 26. Weak Mutation 14: nul.study.videostore.NewReleaseMovie.determineAmount(I)D:10 - ReplaceArithmeticOperator * -> /
   */

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      NewReleaseMovie newReleaseMovie0 = new NewReleaseMovie("nul.study.videostore.Movie");
      double double0 = newReleaseMovie0.determineAmount((-1));
      assertEquals((-3.0), double0, 0.01);
  }
}
