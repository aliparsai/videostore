/*
 * This file was automatically generated by EvoSuite
 * Fri Sep 30 17:51:14 GMT 2016
 */

package nul.study.videostore.EvoSuiteTests;

import org.junit.Test;
import static org.junit.Assert.*;

import java.lang.annotation.Annotation;

import nul.study.videostore.ChildrensMovie;
import nul.study.videostore.Movie;
import nul.study.videostore.NewReleaseMovie;
import nul.study.videostore.RegularMovie;
import nul.study.videostore.Rental;

public class Rental_ESTest {
	public static void assertThrownBy(String sourceClass, Throwable t) throws AssertionError{
        StackTraceElement[] stackTrace = t.getStackTrace();

        // TODO: Force mocked exceptions to always have stack trace
        if(stackTrace.length == 0)
            return;

        StackTraceElement el = stackTrace[0];

        if(sourceClass==null){
            return; //can this even happen?
        }


        String name = el.getClassName();
        if(sourceClass.equals(name)){
            return;
        }
 
        Class<?> klass;

        try {
           klass = Customer_ESTest.class.getClassLoader().loadClass(sourceClass);
        } catch (ClassNotFoundException e) {
            throw new AssertionError("Cannot load/analyze class "+sourceClass);
        }

        for(Annotation annotation : klass.getAnnotations()){
            if(annotation.getClass().getName().equals(name)){
                return;
            }
        }

        while(klass != null){
            klass = klass.getSuperclass();
            if(klass != null && klass.getName().equals(name)){
                return;
            }
        }

        throw new AssertionError("Exception was not thrown in "+sourceClass +" but in "+el+": "+t);
    }


  //Test case number: 0
  /*
   * 16 covered goals:
   * Goal 1. nul.study.videostore.Rental.<init>(Lnul/study/videostore/Movie;I)V: root-Branch
   * Goal 2. nul.study.videostore.Rental.getMovie()Lnul/study/videostore/Movie;: root-Branch
   * Goal 3. Branch nul.study.videostore.Rental.<init>(Lnul/study/videostore/Movie;I)V: root-Branch in context: nul.study.videostore.Rental:<init>(Lnul/study/videostore/Movie;I)V
   * Goal 4. Branch nul.study.videostore.Rental.getMovie()Lnul/study/videostore/Movie;: root-Branch in context: nul.study.videostore.Rental:getMovie()Lnul/study/videostore/Movie;
   * Goal 5. [Output]: nul.study.videostore.Rental.getMovie()Lnul/study/videostore/Movie;:Null
   * Goal 6. nul.study.videostore.Rental.<init>(Lnul/study/videostore/Movie;I)V: Line 6
   * Goal 7. nul.study.videostore.Rental.<init>(Lnul/study/videostore/Movie;I)V: Line 7
   * Goal 8. nul.study.videostore.Rental.<init>(Lnul/study/videostore/Movie;I)V: Line 8
   * Goal 9. nul.study.videostore.Rental.getMovie()Lnul/study/videostore/Movie;: Line 15
   * Goal 10. [METHOD] nul.study.videostore.Rental.<init>(Lnul/study/videostore/Movie;I)V
   * Goal 11. [METHOD] nul.study.videostore.Rental.getMovie()Lnul/study/videostore/Movie;
   * Goal 12. [METHODNOEX] nul.study.videostore.Rental.<init>(Lnul/study/videostore/Movie;I)V
   * Goal 13. [METHODNOEX] nul.study.videostore.Rental.getMovie()Lnul/study/videostore/Movie;
   * Goal 14. Weak Mutation 0: nul.study.videostore.Rental.<init>(Lnul/study/videostore/Movie;I)V:7 - InsertUnaryOp Negation of daysRented
   * Goal 15. Weak Mutation 1: nul.study.videostore.Rental.<init>(Lnul/study/videostore/Movie;I)V:7 - InsertUnaryOp IINC 1 daysRented
   * Goal 16. Weak Mutation 2: nul.study.videostore.Rental.<init>(Lnul/study/videostore/Movie;I)V:7 - InsertUnaryOp IINC -1 daysRented
   */

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Rental rental0 = new Rental((Movie) null, 2);
      rental0.getMovie();
      assertEquals(2, rental0.getDaysRented());
  }

  //Test case number: 1
  /*
   * 16 covered goals:
   * Goal 1. nul.study.videostore.Rental.<init>(Lnul/study/videostore/Movie;I)V: root-Branch
   * Goal 2. nul.study.videostore.Rental.getMovie()Lnul/study/videostore/Movie;: root-Branch
   * Goal 3. Branch nul.study.videostore.Rental.<init>(Lnul/study/videostore/Movie;I)V: root-Branch in context: nul.study.videostore.Rental:<init>(Lnul/study/videostore/Movie;I)V
   * Goal 4. Branch nul.study.videostore.Rental.getMovie()Lnul/study/videostore/Movie;: root-Branch in context: nul.study.videostore.Rental:getMovie()Lnul/study/videostore/Movie;
   * Goal 5. [Output]: nul.study.videostore.Rental.getMovie()Lnul/study/videostore/Movie;:NonNull:nul.study.videostore.Movie:getPriceCode()I:Zero
   * Goal 6. nul.study.videostore.Rental.<init>(Lnul/study/videostore/Movie;I)V: Line 6
   * Goal 7. nul.study.videostore.Rental.<init>(Lnul/study/videostore/Movie;I)V: Line 7
   * Goal 8. nul.study.videostore.Rental.<init>(Lnul/study/videostore/Movie;I)V: Line 8
   * Goal 9. nul.study.videostore.Rental.getMovie()Lnul/study/videostore/Movie;: Line 15
   * Goal 10. [METHOD] nul.study.videostore.Rental.<init>(Lnul/study/videostore/Movie;I)V
   * Goal 11. [METHOD] nul.study.videostore.Rental.getMovie()Lnul/study/videostore/Movie;
   * Goal 12. [METHODNOEX] nul.study.videostore.Rental.<init>(Lnul/study/videostore/Movie;I)V
   * Goal 13. [METHODNOEX] nul.study.videostore.Rental.getMovie()Lnul/study/videostore/Movie;
   * Goal 14. Weak Mutation 0: nul.study.videostore.Rental.<init>(Lnul/study/videostore/Movie;I)V:7 - InsertUnaryOp Negation of daysRented
   * Goal 15. Weak Mutation 1: nul.study.videostore.Rental.<init>(Lnul/study/videostore/Movie;I)V:7 - InsertUnaryOp IINC 1 daysRented
   * Goal 16. Weak Mutation 2: nul.study.videostore.Rental.<init>(Lnul/study/videostore/Movie;I)V:7 - InsertUnaryOp IINC -1 daysRented
   */

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      RegularMovie regularMovie0 = new RegularMovie((String) null);
      Rental rental0 = new Rental((Movie) regularMovie0, (-1313));
      rental0.getMovie();
      assertEquals(-1313, rental0.getDaysRented());
  }

  //Test case number: 2
  /*
   * 16 covered goals:
   * Goal 1. nul.study.videostore.Rental.<init>(Lnul/study/videostore/Movie;I)V: root-Branch
   * Goal 2. nul.study.videostore.Rental.getMovie()Lnul/study/videostore/Movie;: root-Branch
   * Goal 3. Branch nul.study.videostore.Rental.<init>(Lnul/study/videostore/Movie;I)V: root-Branch in context: nul.study.videostore.Rental:<init>(Lnul/study/videostore/Movie;I)V
   * Goal 4. Branch nul.study.videostore.Rental.getMovie()Lnul/study/videostore/Movie;: root-Branch in context: nul.study.videostore.Rental:getMovie()Lnul/study/videostore/Movie;
   * Goal 5. [Output]: nul.study.videostore.Rental.getMovie()Lnul/study/videostore/Movie;:NonNull:nul.study.videostore.Movie:getPriceCode()I:Negative
   * Goal 6. nul.study.videostore.Rental.<init>(Lnul/study/videostore/Movie;I)V: Line 6
   * Goal 7. nul.study.videostore.Rental.<init>(Lnul/study/videostore/Movie;I)V: Line 7
   * Goal 8. nul.study.videostore.Rental.<init>(Lnul/study/videostore/Movie;I)V: Line 8
   * Goal 9. nul.study.videostore.Rental.getMovie()Lnul/study/videostore/Movie;: Line 15
   * Goal 10. [METHOD] nul.study.videostore.Rental.<init>(Lnul/study/videostore/Movie;I)V
   * Goal 11. [METHOD] nul.study.videostore.Rental.getMovie()Lnul/study/videostore/Movie;
   * Goal 12. [METHODNOEX] nul.study.videostore.Rental.<init>(Lnul/study/videostore/Movie;I)V
   * Goal 13. [METHODNOEX] nul.study.videostore.Rental.getMovie()Lnul/study/videostore/Movie;
   * Goal 14. Weak Mutation 0: nul.study.videostore.Rental.<init>(Lnul/study/videostore/Movie;I)V:7 - InsertUnaryOp Negation of daysRented
   * Goal 15. Weak Mutation 1: nul.study.videostore.Rental.<init>(Lnul/study/videostore/Movie;I)V:7 - InsertUnaryOp IINC 1 daysRented
   * Goal 16. Weak Mutation 2: nul.study.videostore.Rental.<init>(Lnul/study/videostore/Movie;I)V:7 - InsertUnaryOp IINC -1 daysRented
   */

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ChildrensMovie childrensMovie0 = new ChildrensMovie("");
      childrensMovie0.setPriceCode((-1));
      Rental rental0 = new Rental((Movie) childrensMovie0, (-1));
      rental0.getMovie();
      assertEquals(-1, rental0.getDaysRented());
  }

  //Test case number: 3
  /*
   * 19 covered goals:
   * Goal 1. nul.study.videostore.Rental.<init>(Lnul/study/videostore/Movie;I)V: root-Branch
   * Goal 2. nul.study.videostore.Rental.getDaysRented()I: root-Branch
   * Goal 3. Branch nul.study.videostore.Rental.<init>(Lnul/study/videostore/Movie;I)V: root-Branch in context: nul.study.videostore.Rental:<init>(Lnul/study/videostore/Movie;I)V
   * Goal 4. Branch nul.study.videostore.Rental.getDaysRented()I: root-Branch in context: nul.study.videostore.Rental:getDaysRented()I
   * Goal 5. [Output]: nul.study.videostore.Rental.getDaysRented()I:Positive
   * Goal 6. nul.study.videostore.Rental.<init>(Lnul/study/videostore/Movie;I)V: Line 6
   * Goal 7. nul.study.videostore.Rental.<init>(Lnul/study/videostore/Movie;I)V: Line 7
   * Goal 8. nul.study.videostore.Rental.<init>(Lnul/study/videostore/Movie;I)V: Line 8
   * Goal 9. nul.study.videostore.Rental.getDaysRented()I: Line 11
   * Goal 10. [METHOD] nul.study.videostore.Rental.<init>(Lnul/study/videostore/Movie;I)V
   * Goal 11. [METHOD] nul.study.videostore.Rental.getDaysRented()I
   * Goal 12. [METHODNOEX] nul.study.videostore.Rental.<init>(Lnul/study/videostore/Movie;I)V
   * Goal 13. [METHODNOEX] nul.study.videostore.Rental.getDaysRented()I
   * Goal 14. Weak Mutation 0: nul.study.videostore.Rental.<init>(Lnul/study/videostore/Movie;I)V:7 - InsertUnaryOp Negation of daysRented
   * Goal 15. Weak Mutation 1: nul.study.videostore.Rental.<init>(Lnul/study/videostore/Movie;I)V:7 - InsertUnaryOp IINC 1 daysRented
   * Goal 16. Weak Mutation 2: nul.study.videostore.Rental.<init>(Lnul/study/videostore/Movie;I)V:7 - InsertUnaryOp IINC -1 daysRented
   * Goal 17. Weak Mutation 3: nul.study.videostore.Rental.getDaysRented()I:11 - InsertUnaryOp Negation
   * Goal 18. Weak Mutation 4: nul.study.videostore.Rental.getDaysRented()I:11 - InsertUnaryOp +1
   * Goal 19. Weak Mutation 5: nul.study.videostore.Rental.getDaysRented()I:11 - InsertUnaryOp -1
   */

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      NewReleaseMovie newReleaseMovie0 = new NewReleaseMovie("]");
      Rental rental0 = new Rental((Movie) newReleaseMovie0, 601);
      int int0 = rental0.getDaysRented();
      assertEquals(601, int0);
  }

  //Test case number: 4
  /*
   * 19 covered goals:
   * Goal 1. nul.study.videostore.Rental.<init>(Lnul/study/videostore/Movie;I)V: root-Branch
   * Goal 2. nul.study.videostore.Rental.getDaysRented()I: root-Branch
   * Goal 3. Branch nul.study.videostore.Rental.<init>(Lnul/study/videostore/Movie;I)V: root-Branch in context: nul.study.videostore.Rental:<init>(Lnul/study/videostore/Movie;I)V
   * Goal 4. Branch nul.study.videostore.Rental.getDaysRented()I: root-Branch in context: nul.study.videostore.Rental:getDaysRented()I
   * Goal 5. [Output]: nul.study.videostore.Rental.getDaysRented()I:Negative
   * Goal 6. nul.study.videostore.Rental.<init>(Lnul/study/videostore/Movie;I)V: Line 6
   * Goal 7. nul.study.videostore.Rental.<init>(Lnul/study/videostore/Movie;I)V: Line 7
   * Goal 8. nul.study.videostore.Rental.<init>(Lnul/study/videostore/Movie;I)V: Line 8
   * Goal 9. nul.study.videostore.Rental.getDaysRented()I: Line 11
   * Goal 10. [METHOD] nul.study.videostore.Rental.<init>(Lnul/study/videostore/Movie;I)V
   * Goal 11. [METHOD] nul.study.videostore.Rental.getDaysRented()I
   * Goal 12. [METHODNOEX] nul.study.videostore.Rental.<init>(Lnul/study/videostore/Movie;I)V
   * Goal 13. [METHODNOEX] nul.study.videostore.Rental.getDaysRented()I
   * Goal 14. Weak Mutation 0: nul.study.videostore.Rental.<init>(Lnul/study/videostore/Movie;I)V:7 - InsertUnaryOp Negation of daysRented
   * Goal 15. Weak Mutation 1: nul.study.videostore.Rental.<init>(Lnul/study/videostore/Movie;I)V:7 - InsertUnaryOp IINC 1 daysRented
   * Goal 16. Weak Mutation 2: nul.study.videostore.Rental.<init>(Lnul/study/videostore/Movie;I)V:7 - InsertUnaryOp IINC -1 daysRented
   * Goal 17. Weak Mutation 3: nul.study.videostore.Rental.getDaysRented()I:11 - InsertUnaryOp Negation
   * Goal 18. Weak Mutation 4: nul.study.videostore.Rental.getDaysRented()I:11 - InsertUnaryOp +1
   * Goal 19. Weak Mutation 5: nul.study.videostore.Rental.getDaysRented()I:11 - InsertUnaryOp -1
   */

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      NewReleaseMovie newReleaseMovie0 = new NewReleaseMovie("");
      Rental rental0 = new Rental((Movie) newReleaseMovie0, (-780));
      int int0 = rental0.getDaysRented();
      assertEquals((-780), int0);
  }

  //Test case number: 5
  /*
   * 19 covered goals:
   * Goal 1. nul.study.videostore.Rental.<init>(Lnul/study/videostore/Movie;I)V: root-Branch
   * Goal 2. nul.study.videostore.Rental.determineFrequentRenterPoints()I: root-Branch
   * Goal 3. Branch nul.study.videostore.Rental.<init>(Lnul/study/videostore/Movie;I)V: root-Branch in context: nul.study.videostore.Rental:<init>(Lnul/study/videostore/Movie;I)V
   * Goal 4. Branch nul.study.videostore.Rental.determineFrequentRenterPoints()I: root-Branch in context: nul.study.videostore.Rental:determineFrequentRenterPoints()I
   * Goal 5. [Output]: nul.study.videostore.Rental.determineFrequentRenterPoints()I:Positive
   * Goal 6. nul.study.videostore.Rental.<init>(Lnul/study/videostore/Movie;I)V: Line 6
   * Goal 7. nul.study.videostore.Rental.<init>(Lnul/study/videostore/Movie;I)V: Line 7
   * Goal 8. nul.study.videostore.Rental.<init>(Lnul/study/videostore/Movie;I)V: Line 8
   * Goal 9. nul.study.videostore.Rental.determineFrequentRenterPoints()I: Line 26
   * Goal 10. [METHOD] nul.study.videostore.Rental.<init>(Lnul/study/videostore/Movie;I)V
   * Goal 11. [METHOD] nul.study.videostore.Rental.determineFrequentRenterPoints()I
   * Goal 12. [METHODNOEX] nul.study.videostore.Rental.<init>(Lnul/study/videostore/Movie;I)V
   * Goal 13. [METHODNOEX] nul.study.videostore.Rental.determineFrequentRenterPoints()I
   * Goal 14. Weak Mutation 0: nul.study.videostore.Rental.<init>(Lnul/study/videostore/Movie;I)V:7 - InsertUnaryOp Negation of daysRented
   * Goal 15. Weak Mutation 1: nul.study.videostore.Rental.<init>(Lnul/study/videostore/Movie;I)V:7 - InsertUnaryOp IINC 1 daysRented
   * Goal 16. Weak Mutation 2: nul.study.videostore.Rental.<init>(Lnul/study/videostore/Movie;I)V:7 - InsertUnaryOp IINC -1 daysRented
   * Goal 17. Weak Mutation 9: nul.study.videostore.Rental.determineFrequentRenterPoints()I:26 - InsertUnaryOp Negation
   * Goal 18. Weak Mutation 10: nul.study.videostore.Rental.determineFrequentRenterPoints()I:26 - InsertUnaryOp +1
   * Goal 19. Weak Mutation 11: nul.study.videostore.Rental.determineFrequentRenterPoints()I:26 - InsertUnaryOp -1
   */

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      NewReleaseMovie newReleaseMovie0 = new NewReleaseMovie("");
      Rental rental0 = new Rental((Movie) newReleaseMovie0, (-780));
      int int0 = rental0.determineFrequentRenterPoints();
      assertEquals(1, int0);
      assertEquals(-780, rental0.getDaysRented());
  }

  //Test case number: 6
  /*
   * 19 covered goals:
   * Goal 1. nul.study.videostore.Rental.<init>(Lnul/study/videostore/Movie;I)V: root-Branch
   * Goal 2. nul.study.videostore.Rental.determineAmount()D: root-Branch
   * Goal 3. Branch nul.study.videostore.Rental.determineAmount()D: root-Branch in context: nul.study.videostore.Rental:determineAmount()D
   * Goal 4. Branch nul.study.videostore.Rental.<init>(Lnul/study/videostore/Movie;I)V: root-Branch in context: nul.study.videostore.Rental:<init>(Lnul/study/videostore/Movie;I)V
   * Goal 5. [Output]: nul.study.videostore.Rental.determineAmount()D:Positive
   * Goal 6. nul.study.videostore.Rental.<init>(Lnul/study/videostore/Movie;I)V: Line 6
   * Goal 7. nul.study.videostore.Rental.<init>(Lnul/study/videostore/Movie;I)V: Line 7
   * Goal 8. nul.study.videostore.Rental.<init>(Lnul/study/videostore/Movie;I)V: Line 8
   * Goal 9. nul.study.videostore.Rental.determineAmount()D: Line 22
   * Goal 10. [METHOD] nul.study.videostore.Rental.<init>(Lnul/study/videostore/Movie;I)V
   * Goal 11. [METHOD] nul.study.videostore.Rental.determineAmount()D
   * Goal 12. [METHODNOEX] nul.study.videostore.Rental.<init>(Lnul/study/videostore/Movie;I)V
   * Goal 13. [METHODNOEX] nul.study.videostore.Rental.determineAmount()D
   * Goal 14. Weak Mutation 0: nul.study.videostore.Rental.<init>(Lnul/study/videostore/Movie;I)V:7 - InsertUnaryOp Negation of daysRented
   * Goal 15. Weak Mutation 1: nul.study.videostore.Rental.<init>(Lnul/study/videostore/Movie;I)V:7 - InsertUnaryOp IINC 1 daysRented
   * Goal 16. Weak Mutation 2: nul.study.videostore.Rental.<init>(Lnul/study/videostore/Movie;I)V:7 - InsertUnaryOp IINC -1 daysRented
   * Goal 17. Weak Mutation 6: nul.study.videostore.Rental.determineAmount()D:22 - InsertUnaryOp Negation
   * Goal 18. Weak Mutation 7: nul.study.videostore.Rental.determineAmount()D:22 - InsertUnaryOp +1
   * Goal 19. Weak Mutation 8: nul.study.videostore.Rental.determineAmount()D:22 - InsertUnaryOp -1
   */

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ChildrensMovie childrensMovie0 = new ChildrensMovie("");
      Rental rental0 = new Rental((Movie) childrensMovie0, 1420);
      double double0 = rental0.determineAmount();
      assertEquals(2127.0, double0, 0.01);
  }

  //Test case number: 7
  /*
   * 19 covered goals:
   * Goal 1. nul.study.videostore.Rental.<init>(Lnul/study/videostore/Movie;I)V: root-Branch
   * Goal 2. nul.study.videostore.Rental.determineAmount()D: root-Branch
   * Goal 3. Branch nul.study.videostore.Rental.determineAmount()D: root-Branch in context: nul.study.videostore.Rental:determineAmount()D
   * Goal 4. Branch nul.study.videostore.Rental.<init>(Lnul/study/videostore/Movie;I)V: root-Branch in context: nul.study.videostore.Rental:<init>(Lnul/study/videostore/Movie;I)V
   * Goal 5. [Output]: nul.study.videostore.Rental.determineAmount()D:Negative
   * Goal 6. nul.study.videostore.Rental.<init>(Lnul/study/videostore/Movie;I)V: Line 6
   * Goal 7. nul.study.videostore.Rental.<init>(Lnul/study/videostore/Movie;I)V: Line 7
   * Goal 8. nul.study.videostore.Rental.<init>(Lnul/study/videostore/Movie;I)V: Line 8
   * Goal 9. nul.study.videostore.Rental.determineAmount()D: Line 22
   * Goal 10. [METHOD] nul.study.videostore.Rental.<init>(Lnul/study/videostore/Movie;I)V
   * Goal 11. [METHOD] nul.study.videostore.Rental.determineAmount()D
   * Goal 12. [METHODNOEX] nul.study.videostore.Rental.<init>(Lnul/study/videostore/Movie;I)V
   * Goal 13. [METHODNOEX] nul.study.videostore.Rental.determineAmount()D
   * Goal 14. Weak Mutation 0: nul.study.videostore.Rental.<init>(Lnul/study/videostore/Movie;I)V:7 - InsertUnaryOp Negation of daysRented
   * Goal 15. Weak Mutation 1: nul.study.videostore.Rental.<init>(Lnul/study/videostore/Movie;I)V:7 - InsertUnaryOp IINC 1 daysRented
   * Goal 16. Weak Mutation 2: nul.study.videostore.Rental.<init>(Lnul/study/videostore/Movie;I)V:7 - InsertUnaryOp IINC -1 daysRented
   * Goal 17. Weak Mutation 6: nul.study.videostore.Rental.determineAmount()D:22 - InsertUnaryOp Negation
   * Goal 18. Weak Mutation 7: nul.study.videostore.Rental.determineAmount()D:22 - InsertUnaryOp +1
   * Goal 19. Weak Mutation 8: nul.study.videostore.Rental.determineAmount()D:22 - InsertUnaryOp -1
   */

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      NewReleaseMovie newReleaseMovie0 = new NewReleaseMovie("");
      Rental rental0 = new Rental((Movie) newReleaseMovie0, (-780));
      double double0 = rental0.determineAmount();
      assertEquals((-2340.0), double0, 0.01);
  }

  //Test case number: 8
  /*
   * 18 covered goals:
   * Goal 1. nul.study.videostore.Rental.<init>(Lnul/study/videostore/Movie;I)V: root-Branch
   * Goal 2. nul.study.videostore.Rental.determineAmount()D: root-Branch
   * Goal 3. Branch nul.study.videostore.Rental.determineAmount()D: root-Branch in context: nul.study.videostore.Rental:determineAmount()D
   * Goal 4. Branch nul.study.videostore.Rental.<init>(Lnul/study/videostore/Movie;I)V: root-Branch in context: nul.study.videostore.Rental:<init>(Lnul/study/videostore/Movie;I)V
   * Goal 5. determineAmount()D_java.lang.NullPointerException_IMPLICIT
   * Goal 6. nul.study.videostore.Rental.<init>(Lnul/study/videostore/Movie;I)V: Line 6
   * Goal 7. nul.study.videostore.Rental.<init>(Lnul/study/videostore/Movie;I)V: Line 7
   * Goal 8. nul.study.videostore.Rental.<init>(Lnul/study/videostore/Movie;I)V: Line 8
   * Goal 9. nul.study.videostore.Rental.determineAmount()D: Line 22
   * Goal 10. [METHOD] nul.study.videostore.Rental.<init>(Lnul/study/videostore/Movie;I)V
   * Goal 11. [METHOD] nul.study.videostore.Rental.determineAmount()D
   * Goal 12. [METHODNOEX] nul.study.videostore.Rental.<init>(Lnul/study/videostore/Movie;I)V
   * Goal 13. Weak Mutation 0: nul.study.videostore.Rental.<init>(Lnul/study/videostore/Movie;I)V:7 - InsertUnaryOp Negation of daysRented
   * Goal 14. Weak Mutation 1: nul.study.videostore.Rental.<init>(Lnul/study/videostore/Movie;I)V:7 - InsertUnaryOp IINC 1 daysRented
   * Goal 15. Weak Mutation 2: nul.study.videostore.Rental.<init>(Lnul/study/videostore/Movie;I)V:7 - InsertUnaryOp IINC -1 daysRented
   * Goal 16. Weak Mutation 6: nul.study.videostore.Rental.determineAmount()D:22 - InsertUnaryOp Negation
   * Goal 17. Weak Mutation 7: nul.study.videostore.Rental.determineAmount()D:22 - InsertUnaryOp +1
   * Goal 18. Weak Mutation 8: nul.study.videostore.Rental.determineAmount()D:22 - InsertUnaryOp -1
   */

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Rental rental0 = new Rental((Movie) null, (-1));
      // Undeclared exception!
      try { 
        rental0.determineAmount();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("nul.study.videostore.Rental", e);
      }
  }

  //Test case number: 9
  /*
   * 16 covered goals:
   * Goal 1. nul.study.videostore.Rental.<init>(Lnul/study/videostore/Movie;I)V: root-Branch
   * Goal 2. nul.study.videostore.Rental.getMovie()Lnul/study/videostore/Movie;: root-Branch
   * Goal 3. Branch nul.study.videostore.Rental.<init>(Lnul/study/videostore/Movie;I)V: root-Branch in context: nul.study.videostore.Rental:<init>(Lnul/study/videostore/Movie;I)V
   * Goal 4. Branch nul.study.videostore.Rental.getMovie()Lnul/study/videostore/Movie;: root-Branch in context: nul.study.videostore.Rental:getMovie()Lnul/study/videostore/Movie;
   * Goal 5. [Output]: nul.study.videostore.Rental.getMovie()Lnul/study/videostore/Movie;:NonNull:nul.study.videostore.Movie:getPriceCode()I:Positive
   * Goal 6. nul.study.videostore.Rental.<init>(Lnul/study/videostore/Movie;I)V: Line 6
   * Goal 7. nul.study.videostore.Rental.<init>(Lnul/study/videostore/Movie;I)V: Line 7
   * Goal 8. nul.study.videostore.Rental.<init>(Lnul/study/videostore/Movie;I)V: Line 8
   * Goal 9. nul.study.videostore.Rental.getMovie()Lnul/study/videostore/Movie;: Line 15
   * Goal 10. [METHOD] nul.study.videostore.Rental.<init>(Lnul/study/videostore/Movie;I)V
   * Goal 11. [METHOD] nul.study.videostore.Rental.getMovie()Lnul/study/videostore/Movie;
   * Goal 12. [METHODNOEX] nul.study.videostore.Rental.<init>(Lnul/study/videostore/Movie;I)V
   * Goal 13. [METHODNOEX] nul.study.videostore.Rental.getMovie()Lnul/study/videostore/Movie;
   * Goal 14. Weak Mutation 0: nul.study.videostore.Rental.<init>(Lnul/study/videostore/Movie;I)V:7 - InsertUnaryOp Negation of daysRented
   * Goal 15. Weak Mutation 1: nul.study.videostore.Rental.<init>(Lnul/study/videostore/Movie;I)V:7 - InsertUnaryOp IINC 1 daysRented
   * Goal 16. Weak Mutation 2: nul.study.videostore.Rental.<init>(Lnul/study/videostore/Movie;I)V:7 - InsertUnaryOp IINC -1 daysRented
   */

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      NewReleaseMovie newReleaseMovie0 = new NewReleaseMovie("#7z+gA");
      Rental rental0 = new Rental((Movie) newReleaseMovie0, 0);
      rental0.getMovie();
      assertEquals(0, rental0.getDaysRented());
  }

  //Test case number: 10
  /*
   * 18 covered goals:
   * Goal 1. nul.study.videostore.Rental.<init>(Lnul/study/videostore/Movie;I)V: root-Branch
   * Goal 2. nul.study.videostore.Rental.determineFrequentRenterPoints()I: root-Branch
   * Goal 3. Branch nul.study.videostore.Rental.<init>(Lnul/study/videostore/Movie;I)V: root-Branch in context: nul.study.videostore.Rental:<init>(Lnul/study/videostore/Movie;I)V
   * Goal 4. Branch nul.study.videostore.Rental.determineFrequentRenterPoints()I: root-Branch in context: nul.study.videostore.Rental:determineFrequentRenterPoints()I
   * Goal 5. determineFrequentRenterPoints()I_java.lang.NullPointerException_IMPLICIT
   * Goal 6. nul.study.videostore.Rental.<init>(Lnul/study/videostore/Movie;I)V: Line 6
   * Goal 7. nul.study.videostore.Rental.<init>(Lnul/study/videostore/Movie;I)V: Line 7
   * Goal 8. nul.study.videostore.Rental.<init>(Lnul/study/videostore/Movie;I)V: Line 8
   * Goal 9. nul.study.videostore.Rental.determineFrequentRenterPoints()I: Line 26
   * Goal 10. [METHOD] nul.study.videostore.Rental.<init>(Lnul/study/videostore/Movie;I)V
   * Goal 11. [METHOD] nul.study.videostore.Rental.determineFrequentRenterPoints()I
   * Goal 12. [METHODNOEX] nul.study.videostore.Rental.<init>(Lnul/study/videostore/Movie;I)V
   * Goal 13. Weak Mutation 0: nul.study.videostore.Rental.<init>(Lnul/study/videostore/Movie;I)V:7 - InsertUnaryOp Negation of daysRented
   * Goal 14. Weak Mutation 1: nul.study.videostore.Rental.<init>(Lnul/study/videostore/Movie;I)V:7 - InsertUnaryOp IINC 1 daysRented
   * Goal 15. Weak Mutation 2: nul.study.videostore.Rental.<init>(Lnul/study/videostore/Movie;I)V:7 - InsertUnaryOp IINC -1 daysRented
   * Goal 16. Weak Mutation 9: nul.study.videostore.Rental.determineFrequentRenterPoints()I:26 - InsertUnaryOp Negation
   * Goal 17. Weak Mutation 10: nul.study.videostore.Rental.determineFrequentRenterPoints()I:26 - InsertUnaryOp +1
   * Goal 18. Weak Mutation 11: nul.study.videostore.Rental.determineFrequentRenterPoints()I:26 - InsertUnaryOp -1
   */

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Rental rental0 = new Rental((Movie) null, 0);
      // Undeclared exception!
      try { 
        rental0.determineFrequentRenterPoints();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("nul.study.videostore.Rental", e);
      }
  }

  //Test case number: 11
  /*
   * 19 covered goals:
   * Goal 1. nul.study.videostore.Rental.<init>(Lnul/study/videostore/Movie;I)V: root-Branch
   * Goal 2. nul.study.videostore.Rental.determineAmount()D: root-Branch
   * Goal 3. Branch nul.study.videostore.Rental.determineAmount()D: root-Branch in context: nul.study.videostore.Rental:determineAmount()D
   * Goal 4. Branch nul.study.videostore.Rental.<init>(Lnul/study/videostore/Movie;I)V: root-Branch in context: nul.study.videostore.Rental:<init>(Lnul/study/videostore/Movie;I)V
   * Goal 5. [Output]: nul.study.videostore.Rental.determineAmount()D:Zero
   * Goal 6. nul.study.videostore.Rental.<init>(Lnul/study/videostore/Movie;I)V: Line 6
   * Goal 7. nul.study.videostore.Rental.<init>(Lnul/study/videostore/Movie;I)V: Line 7
   * Goal 8. nul.study.videostore.Rental.<init>(Lnul/study/videostore/Movie;I)V: Line 8
   * Goal 9. nul.study.videostore.Rental.determineAmount()D: Line 22
   * Goal 10. [METHOD] nul.study.videostore.Rental.<init>(Lnul/study/videostore/Movie;I)V
   * Goal 11. [METHOD] nul.study.videostore.Rental.determineAmount()D
   * Goal 12. [METHODNOEX] nul.study.videostore.Rental.<init>(Lnul/study/videostore/Movie;I)V
   * Goal 13. [METHODNOEX] nul.study.videostore.Rental.determineAmount()D
   * Goal 14. Weak Mutation 0: nul.study.videostore.Rental.<init>(Lnul/study/videostore/Movie;I)V:7 - InsertUnaryOp Negation of daysRented
   * Goal 15. Weak Mutation 1: nul.study.videostore.Rental.<init>(Lnul/study/videostore/Movie;I)V:7 - InsertUnaryOp IINC 1 daysRented
   * Goal 16. Weak Mutation 2: nul.study.videostore.Rental.<init>(Lnul/study/videostore/Movie;I)V:7 - InsertUnaryOp IINC -1 daysRented
   * Goal 17. Weak Mutation 6: nul.study.videostore.Rental.determineAmount()D:22 - InsertUnaryOp Negation
   * Goal 18. Weak Mutation 7: nul.study.videostore.Rental.determineAmount()D:22 - InsertUnaryOp +1
   * Goal 19. Weak Mutation 8: nul.study.videostore.Rental.determineAmount()D:22 - InsertUnaryOp -1
   */

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      NewReleaseMovie newReleaseMovie0 = new NewReleaseMovie("#7z+gA");
      Rental rental0 = new Rental((Movie) newReleaseMovie0, 0);
      double double0 = rental0.determineAmount();
      assertEquals(0.0, double0, 0.01);
  }

  //Test case number: 12
  /*
   * 19 covered goals:
   * Goal 1. nul.study.videostore.Rental.<init>(Lnul/study/videostore/Movie;I)V: root-Branch
   * Goal 2. nul.study.videostore.Rental.getDaysRented()I: root-Branch
   * Goal 3. Branch nul.study.videostore.Rental.<init>(Lnul/study/videostore/Movie;I)V: root-Branch in context: nul.study.videostore.Rental:<init>(Lnul/study/videostore/Movie;I)V
   * Goal 4. Branch nul.study.videostore.Rental.getDaysRented()I: root-Branch in context: nul.study.videostore.Rental:getDaysRented()I
   * Goal 5. [Output]: nul.study.videostore.Rental.getDaysRented()I:Zero
   * Goal 6. nul.study.videostore.Rental.<init>(Lnul/study/videostore/Movie;I)V: Line 6
   * Goal 7. nul.study.videostore.Rental.<init>(Lnul/study/videostore/Movie;I)V: Line 7
   * Goal 8. nul.study.videostore.Rental.<init>(Lnul/study/videostore/Movie;I)V: Line 8
   * Goal 9. nul.study.videostore.Rental.getDaysRented()I: Line 11
   * Goal 10. [METHOD] nul.study.videostore.Rental.<init>(Lnul/study/videostore/Movie;I)V
   * Goal 11. [METHOD] nul.study.videostore.Rental.getDaysRented()I
   * Goal 12. [METHODNOEX] nul.study.videostore.Rental.<init>(Lnul/study/videostore/Movie;I)V
   * Goal 13. [METHODNOEX] nul.study.videostore.Rental.getDaysRented()I
   * Goal 14. Weak Mutation 0: nul.study.videostore.Rental.<init>(Lnul/study/videostore/Movie;I)V:7 - InsertUnaryOp Negation of daysRented
   * Goal 15. Weak Mutation 1: nul.study.videostore.Rental.<init>(Lnul/study/videostore/Movie;I)V:7 - InsertUnaryOp IINC 1 daysRented
   * Goal 16. Weak Mutation 2: nul.study.videostore.Rental.<init>(Lnul/study/videostore/Movie;I)V:7 - InsertUnaryOp IINC -1 daysRented
   * Goal 17. Weak Mutation 3: nul.study.videostore.Rental.getDaysRented()I:11 - InsertUnaryOp Negation
   * Goal 18. Weak Mutation 4: nul.study.videostore.Rental.getDaysRented()I:11 - InsertUnaryOp +1
   * Goal 19. Weak Mutation 5: nul.study.videostore.Rental.getDaysRented()I:11 - InsertUnaryOp -1
   */

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      NewReleaseMovie newReleaseMovie0 = new NewReleaseMovie("#7z+gA");
      Rental rental0 = new Rental((Movie) newReleaseMovie0, 0);
      int int0 = rental0.getDaysRented();
      assertEquals(0, int0);
  }
}
